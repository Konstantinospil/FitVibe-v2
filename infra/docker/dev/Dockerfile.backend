## ===============================================================
## FitVibe Backend - Monorepo Build Pipeline (Optimized)
## ===============================================================

# ---------- Builder Stage ----------
FROM node:20-alpine AS builder
WORKDIR /app

# 1️⃣ Copy workspace manifests for dependency graph
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY apps/backend/package.json apps/backend/
COPY packages/*/package.json packages/*/

# 2️⃣ Enable pnpm & prefetch store for reproducible caching
RUN corepack enable && corepack prepare pnpm@9.0.0 --activate
RUN pnpm fetch --prod=false

# 3️⃣ Copy project sources after deps (better caching)
COPY . .

# 4️⃣ Install all dependencies using the prefetched store (offline)
RUN pnpm install --frozen-lockfile --prod=false --offline

# 5️⃣ Build backend workspace (TypeScript → JS)
RUN pnpm --filter @fitvibe/backend run build

# ---------- Runtime Stage ----------
FROM node:20-alpine AS runtime
WORKDIR /app

# 1️⃣ Copy only required files from builder
COPY --from=builder /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder /app/apps/backend/package.json ./apps/backend/
COPY --from=builder /app/pnpm-workspace.yaml /app/pnpm-lock.yaml ./

# 2️⃣ Copy node_modules for production (only runtime deps)
COPY --from=builder /app/node_modules ./node_modules

# 3️⃣ Create a non-root user for security
RUN addgroup -S nodeapp && adduser -S nodeapp -G nodeapp
USER nodeapp

# 4️⃣ Set environment defaults
ENV NODE_ENV=production \
    PORT=3000

EXPOSE 3000

# 5️⃣ Launch the compiled backend
CMD ["node", "apps/backend/dist/index.js"]
## ===============================================================
